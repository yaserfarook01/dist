{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/product-form/product-form.component.ts","./src/app/product-form/product-form.component.html","./src/environments/environment.ts","./src/app/services/product.service.ts","./src/app/product-list/product-list.component.ts","./src/app/product-list/product-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent { }","<div class=\"home-container\">\n    <h1>Welcome to the Retail Inventory Management System</h1>\n    <div class=\"buttons\">\n        <button routerLink=\"/product-list\" class=\"btn\">View Products</button>\n        <button routerLink=\"/product-form\" class=\"btn\">Add Product</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProductService } from '../services/product.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css']\n})\nexport class ProductFormComponent implements OnInit {\n  product: any = { name: '', description: '', quantity: 0, price: 0 };\n  editMode: boolean = false;\n  productId: number | null = null;\n  successMessage: string | null = null;\n\n  constructor(\n    private productService: ProductService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  async ngOnInit(): Promise<void> {\n    this.productId = this.route.snapshot.params['id'];\n    if (this.productId) {\n      this.editMode = true;\n      try {\n        this.product = await this.productService.getProduct(this.productId).toPromise();\n      } catch (error) {\n        //console.error('Error loading product:', error);\n      }\n    }\n  }\n\n  async saveProduct(form: NgForm): Promise<void> {\n    if (form.invalid) {\n      form.control.markAllAsTouched();\n      return;\n    }\n\n    try {\n      if (this.editMode) {\n        await this.productService.updateProduct(this.productId!, this.product).toPromise();\n        this.successMessage = 'Item Updated Successfully';\n      } else {\n        await this.productService.createProduct(this.product).toPromise();\n        this.successMessage = 'Item Added Successfully';\n      }\n\n      setTimeout(() => {\n        this.successMessage = null;\n        this.router.navigate(['/product-list']); // Navigate to the product list page\n      }, 2000); // Delay navigation to show the success message\n\n    } catch (error) {\n      //console.error('Error saving product:', error);\n    }\n\n    // Reset the form or do other necessary actions\n    form.resetForm();\n    this.product = {}; // Clear the product object\n  }\n}","<div class=\"product-form-container\">\n  <h2>{{ editMode ? 'Edit Product' : 'Add Product' }}</h2>\n  <form #form=\"ngForm\" (ngSubmit)=\"saveProduct(form)\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" [(ngModel)]=\"product.name\" name=\"name\" required minlength=\"3\" #name=\"ngModel\" autocomplete=\"name\">\n      <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"error-message\">\n        <div *ngIf=\"name.errors?.required\">Name is required.</div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description:</label>\n      <input type=\"text\" id=\"description\" [(ngModel)]=\"product.description\" name=\"description\" required minlength=\"10\" #description=\"ngModel\" autocomplete=\"off\">\n      <div *ngIf=\"description.invalid && (description.dirty || description.touched)\" class=\"error-message\">\n        <div *ngIf=\"description.errors?.required\">Description is required.</div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"quantity\">Quantity:</label>\n      <input type=\"number\" id=\"quantity\" [(ngModel)]=\"product.quantity\" name=\"quantity\" required min=\"1\" #quantity=\"ngModel\" autocomplete=\"off\">\n      <div *ngIf=\"quantity.invalid && (quantity.dirty || quantity.touched)\" class=\"error-message\">\n        <div *ngIf=\"quantity.errors?.required\">Quantity is required.</div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"price\">Price:</label>\n      <input type=\"number\" id=\"price\" [(ngModel)]=\"product.price\" name=\"price\" required min=\"0.01\" step=\"0.01\" #price=\"ngModel\" autocomplete=\"off\">\n      <div *ngIf=\"price.invalid && (price.dirty || price.touched)\" class=\"error-message\">\n        <div *ngIf=\"price.errors?.required\">Price is required.</div>\n      </div>\n    </div>\n    <button type=\"submit\" [disabled]=\"form.invalid\">{{ editMode ? 'Update' : 'Save' }}</button>\n  </form>\n  <div *ngIf=\"successMessage\" class=\"success-message\">\n    {{ successMessage }}\n  </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Product } from '../models/product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private baseUrl = 'https://springboot-emp-vvvh35pqva-uc.a.run.app/api/products';\n\n  constructor(private http: HttpClient) { }\n\n  getProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>(`${this.baseUrl}`);\n  }\n\n  getProduct(id: number): Observable<Product> {\n    return this.http.get<Product>(`${this.baseUrl}/${id}`);\n  }\n\n  createProduct(product: Product): Observable<Product> {\n    return this.http.post<Product>(this.baseUrl, product);\n  }\n\n  updateProduct(id: number, product: Product): Observable<Product> {\n    return this.http.put<Product>(`${this.baseUrl}/${id}`, product);\n  }\n\n  deleteProduct(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../services/product.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n  products: any[] = [];\n  successMessage: string | null = null;\n\n  constructor(private productService: ProductService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.loadProducts();\n  }\n\n  async loadProducts() {\n    try {\n      this.products = await this.productService.getProducts().toPromise();\n    } catch (error) {\n      //console.error('Failed to load products', error);\n      // Handle the error appropriately, e.g., show an error message to the user\n    }\n  }\n\n  async deleteProduct(id: number) {\n    try {\n      await this.productService.deleteProduct(id).toPromise();\n      await this.loadProducts(); // Reload the product list\n      this.successMessage = 'Item Deleted Successfully';\n      setTimeout(() => {\n        this.successMessage = null;\n      }, 2000);\n    } catch (error) {\n      //console.error('Failed to delete product', error);\n      // Handle the error appropriately, e.g., show an error message to the user\n    }\n  }\n\n  editProduct(id: number) {\n    this.router.navigate([`/product-form/${id}`]);\n  }\n\n  goToHome(): void {\n    this.router.navigate(['/']);\n  }\n}","<div class=\"product-list-container\">\n  <h2>Product List</h2>\n  <button class=\"home-button\" (click)=\"goToHome()\">Go to Home</button>\n  <table class=\"product-table\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Description</th>\n        <th>Quantity</th>\n        <th>Price</th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let product of products\">\n        <td>{{ product.name }}</td>\n        <td>{{ product.description }}</td>\n        <td>{{ product.quantity }}</td>\n        <td>{{ product.price }}</td>\n        <td>\n          <button class=\"edit-button\" (click)=\"editProduct(product.id)\">Edit</button>\n          <button class=\"delete-button\" (click)=\"deleteProduct(product.id)\">Delete</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div *ngIf=\"successMessage\" class=\"success-message\">\n    {{ successMessage }}\n  </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angularapp';\n}\n","<router-outlet></router-outlet> ","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductFormComponent } from './product-form/product-form.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'product-list', component: ProductListComponent },\n  { path: 'product-form', component: ProductFormComponent },\n  { path: 'product-form/:id', component: ProductFormComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ProductListComponent,\n    ProductFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}