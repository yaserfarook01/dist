{"version":3,"sources":["webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/product-form/product-form.component.html","webpack:///src/app/product-form/product-form.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/services/product.service.ts","webpack:///src/app/product-list/product-list.component.html","webpack:///src/app/product-list/product-list.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HomeComponent","selector","templateUrl","styleUrls","ProductFormComponent","productService","route","router","product","name","description","quantity","price","editMode","productId","successMessage","snapshot","params","getProduct","toPromise","form","invalid","control","markAllAsTouched","updateProduct","createProduct","setTimeout","navigate","resetForm","saveProduct","environment","production","ProductService","http","baseUrl","get","id","post","put","providedIn","ProductListComponent","products","loadProducts","getProducts","deleteProduct","goToHome","AppComponent","title","routes","path","component","AppModule","forRoot","declarations","imports","providers","bootstrap","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent { }","<div class=\"home-container\">\n    <h1>Welcome to the Retail Inventory Management System</h1>\n    <div class=\"buttons\">\n        <button routerLink=\"/product-list\" class=\"btn\">View Products</button>\n        <button routerLink=\"/product-form\" class=\"btn\">Add Product</button>\n    </div>\n</div>","<div class=\"product-form-container\">\n  <h2>{{ editMode ? 'Edit Product' : 'Add Product' }}</h2>\n  <form #form=\"ngForm\" (ngSubmit)=\"saveProduct(form)\" novalidate>\n    <div class=\"form-group\">\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" [(ngModel)]=\"product.name\" name=\"name\" required minlength=\"3\" #name=\"ngModel\" autocomplete=\"name\">\n      <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"error-message\">\n        <div *ngIf=\"name.errors?.required\">Name is required.</div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description:</label>\n      <input type=\"text\" id=\"description\" [(ngModel)]=\"product.description\" name=\"description\" required minlength=\"10\" #description=\"ngModel\" autocomplete=\"off\">\n      <div *ngIf=\"description.invalid && (description.dirty || description.touched)\" class=\"error-message\">\n        <div *ngIf=\"description.errors?.required\">Description is required.</div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"quantity\">Quantity:</label>\n      <input type=\"number\" id=\"quantity\" [(ngModel)]=\"product.quantity\" name=\"quantity\" required min=\"1\" #quantity=\"ngModel\" autocomplete=\"off\">\n      <div *ngIf=\"quantity.invalid && (quantity.dirty || quantity.touched)\" class=\"error-message\">\n        <div *ngIf=\"quantity.errors?.required\">Quantity is required.</div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"price\">Price:</label>\n      <input type=\"number\" id=\"price\" [(ngModel)]=\"product.price\" name=\"price\" required min=\"0.01\" step=\"0.01\" #price=\"ngModel\" autocomplete=\"off\">\n      <div *ngIf=\"price.invalid && (price.dirty || price.touched)\" class=\"error-message\">\n        <div *ngIf=\"price.errors?.required\">Price is required.</div>\n      </div>\n    </div>\n    <button type=\"submit\" [disabled]=\"form.invalid\">{{ editMode ? 'Update' : 'Save' }}</button>\n  </form>\n  <div *ngIf=\"successMessage\" class=\"success-message\">\n    {{ successMessage }}\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProductService } from '../services/product.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css']\n})\nexport class ProductFormComponent implements OnInit {\n  product: any = { name: '', description: '', quantity: 0, price: 0 };\n  editMode: boolean = false;\n  productId: number | null = null;\n  successMessage: string | null = null;\n\n  constructor(\n    private productService: ProductService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  async ngOnInit(): Promise<void> {\n    this.productId = this.route.snapshot.params['id'];\n    if (this.productId) {\n      this.editMode = true;\n      try {\n        this.product = await this.productService.getProduct(this.productId).toPromise();\n      } catch (error) {\n        //console.error('Error loading product:', error);\n      }\n    }\n  }\n\n  async saveProduct(form: NgForm): Promise<void> {\n    if (form.invalid) {\n      form.control.markAllAsTouched();\n      return;\n    }\n\n    try {\n      if (this.editMode) {\n        await this.productService.updateProduct(this.productId!, this.product).toPromise();\n        this.successMessage = 'Item Updated Successfully';\n      } else {\n        await this.productService.createProduct(this.product).toPromise();\n        this.successMessage = 'Item Added Successfully';\n      }\n\n      setTimeout(() => {\n        this.successMessage = null;\n        this.router.navigate(['/product-list']); // Navigate to the product list page\n      }, 2000); // Delay navigation to show the success message\n\n    } catch (error) {\n      //console.error('Error saving product:', error);\n    }\n\n    // Reset the form or do other necessary actions\n    form.resetForm();\n    this.product = {}; // Clear the product object\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Product } from '../models/product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private baseUrl = 'https://springboot-emp-vvvh35pqva-uc.a.run.app/api/products';\n\n  constructor(private http: HttpClient) { }\n\n  getProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>(`${this.baseUrl}`);\n  }\n\n  getProduct(id: number): Observable<Product> {\n    return this.http.get<Product>(`${this.baseUrl}/${id}`);\n  }\n\n  createProduct(product: Product): Observable<Product> {\n    return this.http.post<Product>(this.baseUrl, product);\n  }\n\n  updateProduct(id: number, product: Product): Observable<Product> {\n    return this.http.put<Product>(`${this.baseUrl}/${id}`, product);\n  }\n\n  deleteProduct(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\n  }\n}","<div class=\"product-list-container\">\n  <h2>Product List</h2>\n  <button class=\"home-button\" (click)=\"goToHome()\">Go to Home</button>\n  <table class=\"product-table\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Description</th>\n        <th>Quantity</th>\n        <th>Price</th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let product of products\">\n        <td>{{ product.name }}</td>\n        <td>{{ product.description }}</td>\n        <td>{{ product.quantity }}</td>\n        <td>{{ product.price }}</td>\n        <td>\n          <button class=\"edit-button\" (click)=\"editProduct(product.id)\">Edit</button>\n          <button class=\"delete-button\" (click)=\"deleteProduct(product.id)\">Delete</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div *ngIf=\"successMessage\" class=\"success-message\">\n    {{ successMessage }}\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../services/product.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n  products: any[] = [];\n  successMessage: string | null = null;\n\n  constructor(private productService: ProductService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.loadProducts();\n  }\n\n  async loadProducts() {\n    try {\n      this.products = await this.productService.getProducts().toPromise();\n    } catch (error) {\n      //console.error('Failed to load products', error);\n      // Handle the error appropriately, e.g., show an error message to the user\n    }\n  }\n\n  async deleteProduct(id: number) {\n    try {\n      await this.productService.deleteProduct(id).toPromise();\n      await this.loadProducts(); // Reload the product list\n      this.successMessage = 'Item Deleted Successfully';\n      setTimeout(() => {\n        this.successMessage = null;\n      }, 2000);\n    } catch (error) {\n      //console.error('Failed to delete product', error);\n      // Handle the error appropriately, e.g., show an error message to the user\n    }\n  }\n\n  editProduct(id: number) {\n    this.router.navigate([`/product-form/${id}`]);\n  }\n\n  goToHome(): void {\n    this.router.navigate(['/']);\n  }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angularapp';\n}\n","<router-outlet></router-outlet> ","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductFormComponent } from './product-form/product-form.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'product-list', component: ProductListComponent },\n  { path: 'product-form', component: ProductFormComponent },\n  { path: 'product-form/:id', component: ProductFormComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ProductListComponent,\n    ProductFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}